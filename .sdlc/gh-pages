#!/usr/bin/env bash

set -e

TOOL_SOURCE="${BASH_SOURCE[0]}"
while [ -h "$TOOL_SOURCE" ] ; do TOOL_SOURCE="$(readlink "$TOOL_SOURCE")"; done
SDLC_DIR="$( cd -P "$( dirname "$TOOL_SOURCE" )" && pwd )"
PRJ_HOME="$( cd -P "$( dirname "$SDLC_DIR" )" && pwd )"

source "${SDLC_DIR}/config"

[[ -z "$GH_TOKEN" ]] && {
    echo "Missing GH_TOKEN"
    exit 1
}

WEBSITE_DIR="${PRJ_HOME}/build/website"

export CI_BUILD_ID="$GITHUB_SHA"
sh -c "${SDLC_DIR}/website"

echo "Publishing GH pages"

commit_user=$(git show -s --format='%an' "$GITHUB_SHA")
commit_email=$(git show -s --format='%ae' "$GITHUB_SHA")
echo "Using ${commit_user} / ${commit_email} ${GITHUB_SHA}"
git config --global user.name "${commit_user}"
git config --global user.email "${commit_email}"
git_credentials_file=$(mktemp)
git config --global credential.helper "store --file=${git_credentials_file}"
echo "https://${GITHUB_ACTOR}:${GH_TOKEN}:@github.com" > "$git_credentials_file"

# Fix git safe.directory in container
[[ -n "$HOME" ]] && {
  mkdir -p "$HOME"
  echo "
[safe]
    directory = *
" >> "${HOME}/.gitconfig"
}

[[ -e "${PRJ_HOME}/build/work" ]] && rm -rf "${PRJ_HOME}/build/work"
mkdir -p "${PRJ_HOME}/build/work"
cd "${PRJ_HOME}/build/work"
git clone "https://${GITHUB_ACTOR}:${GH_TOKEN}@github.com/${REPO_OWNER}/${REPO_NAME}.git" gh-pages
cd gh-pages
gh_pages_dir=$(pwd)
# check gh-pages branch exists!
git checkout gh-pages
echo "Branches in ${gh_pages_dir}"
git branch
git rm --quiet -rf .
cp -r $WEBSITE_DIR/* "${gh_pages_dir}"
touch .nojekyll
ls -al
git add -A
git status
git commit --quiet -a -m "Update website"
git push origin gh-pages
