#!/usr/bin/env bash

set -e

TOOL_SOURCE="${BASH_SOURCE[0]}"
while [ -h "$TOOL_SOURCE" ] ; do TOOL_SOURCE="$(readlink "$TOOL_SOURCE")"; done
SDLC_DIR="$( cd -P "$( dirname "$TOOL_SOURCE" )" && pwd )"
PRJ_HOME="$( cd -P "$( dirname "$SDLC_DIR" )" && pwd )"

source "${SDLC_DIR}/config"

git_dirty=$(git status --porcelain)
[[ -n "$git_dirty" ]] && {
  echo 'uncommitted changes detected: aborting release'
  exit 1
}

[[ -z "$GH_TOKEN" ]] && {
  echo "Missing GH_TOKEN"
  exit 1
}

[[ -z "$REPO_OWNER" ]] && {
  echo "no gh owner"
  exit 1
}
[[ -z "$REPO_NAME" ]] && {
  echo "no gh repo"
  exit 1
}

if [ -z "$APP_VERSION" ]; then
  echo 'no release version supplied. $APP_VERSION expected'
  exit 1
fi

ghr_exe='ghr'
command -v "$ghr_exe" >/dev/null || {
  bin_dir=$(mktemp -d)
  echo "Installing ghr in ${bin_dir}"
  ghr_version='0.13.0'
  ghr_url="https://github.com/tcnksm/ghr/releases/download/v${ghr_version}/ghr_v${ghr_version}_linux_amd64.tar.gz"
  cd /tmp
  curl -fSL -o ghr.tar.gz "$ghr_url"
  tar -xvzf ghr.tar.gz
  ghr_exe="${bin_dir}/ghr"
  mv "ghr_v${ghr_version}_linux_amd64/ghr" "${ghr_exe}"
  chmod +x "${ghr_exe}"
  cd "${PRJ_HOME}"
}

RELEASE_VERSION="v$APP_VERSION"

prerelease_marker=$(echo "$APP_VERSION" | cut --delimiter '-' --only-delimited --fields 2)
echo "Prerelease marker '${prerelease_marker}'"

if [ -z "$prerelease_marker" ]; then
  PRERELEASE=''
else
  PRERELEASE='--prerelease'
fi

echo "Release ${PRJ_HOME} version ${RELEASE_VERSION} ${PRERELEASE}"

"${SDLC_DIR}/build-dist"

DIST_DIR="${PRJ_HOME}/${SDLC_DIST_DIR}"
[[ -z "$DIST_DIR" ]] && {
  echo "dist directory not found: ${DIST_DIR}"
  exit 1
}

GHR_COMMAND="${ghr_exe} -t ${GH_TOKEN} -u ${REPO_OWNER} -r ${REPO_NAME} ${PRERELEASE} ${RELEASE_VERSION} ${DIST_DIR}"
echo 'Execute ghr command:'
echo "$GHR_COMMAND"
sh -c "$GHR_COMMAND"
